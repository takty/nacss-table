{"version":3,"sources":["table-neat-width.js"],"names":["window","NACSS","NS","makeDummyCell","t","tagName","d","document","createElement","style","display","position","visibility","whiteSpace","appendChild","apply","tab","cMet","rows","length","maxRowSize","cellMinWidth","cellMinAspect","tr","hasChildNodes","n","childNodes","tn","parseInt","getAttribute","cw","clientWidth","ch","clientHeight","isResizeNeeded","hasAttribute","removeAttribute","width","maxWidth","grid","css","cs","push","collectCells","Math","max","g","Array","y","gr","tds","i","x","td","col","row","p","q","nr","makeCellGrid","ws","gc","w","HTMLTableCellElement","minWidth","setCellWidth","met","gw","newWs","fill","wrapped","gridRow","minW","wp","calcMinWidth","origTabW","origCellWs","wNew","wFix","rem","nw","min","widenTabWidth","calcNewWidths","Object","assign","getMetrics","padH","padV","charW","lineH","dcTd","dcTh","minCharSize","ih","innerHTML","trim","ls","split","ts","map","e","replace","calcMaxLineLength","dc","aw","round","tempW","tempH","tableNeatWidth","tabs","opts","lt","cm","getElementsByTagName","s","getComputedStyle","parseFloat","paddingLeft","paddingRight","paddingTop","paddingBottom","elm","temp","nodeName","setAttribute","fontFamily","fontSize","parentNode","h","removeChild","getTextSize","getCommonMetrics","nnwMinWidthRate","maxBorderWidth","pw","parentElement"],"mappings":"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","file":"table-neat-width.min.js","sourcesContent":["/**\r\n *\r\n * Table Style - Neat Wrap (JS)\r\n *\r\n * @author Takuto Yanagida\r\n * @version 2021-01-04\r\n *\r\n */\r\n\r\n\r\nwindow.NACSS = window['NACSS'] || {};\r\n\r\n\r\n(function (NS) {\r\n\r\n\tNS.tableNeatWidth = function (tabs, opts = {}) {\r\n\t\tif (tabs.length === 0) return;\r\n\t\tconst lt = tabs[tabs.length - 1];\r\n\t\tconst cm = Object.assign(opts, getCommonMetrics(lt), {\r\n\t\t\tnnwMinWidthRate : 0.1,\r\n\t\t\tminCharSize     : 8,\r\n\t\t\tcellMinWidth    : 100,\r\n\t\t\tcellMinAspect   : 2 / 3,  // width / height\r\n\t\t\tmaxRowSize      : 200,\r\n\t\t\tmaxBorderWidth  : 2,\r\n\t\t});\r\n\t\tcm.padH += cm.maxBorderWidth * 2;\r\n\t\tcm.padV += cm.maxBorderWidth * 2;\r\n\t\tcm.dcTd = makeDummyCell(lt, 'td');\r\n\t\tcm.dcTh = makeDummyCell(lt, 'th');\r\n\t\tfor (const t of tabs) {\r\n\t\t\tif (!apply(t, cm) && cm.nnwMinWidthRate) {\r\n\t\t\t\tconst pw = t.parentElement.clientWidth;\r\n\t\t\t\tconst w  = t.clientWidth;\r\n\t\t\t\tif (pw - w < w * cm.nnwMinWidthRate) t.style.width = '100%';\r\n\t\t\t}\r\n\t\t}\r\n\t\tlt.removeChild(cm.dcTd);\r\n\t\tlt.removeChild(cm.dcTh);\r\n\t}\r\n\r\n\tfunction makeDummyCell(t, tagName) {\r\n\t\tconst d = document.createElement(tagName);\r\n\t\td.style.display    = 'inline-block';\r\n\t\td.style.position   = 'fixed';\r\n\t\td.style.visibility = 'hidden';\r\n\t\td.style.whiteSpace = 'nowrap';\r\n\t\treturn t.appendChild(d);\r\n\t}\r\n\r\n\tfunction getCommonMetrics(tab) {\r\n\t\tconst td = tab.getElementsByTagName('td')[0];\r\n\t\tconst s = getComputedStyle(td);\r\n\t\tconst padH  = parseFloat(s.paddingLeft) + parseFloat(s.paddingRight);\r\n\t\tconst padV  = parseFloat(s.paddingTop) + parseFloat(s.paddingBottom);\r\n\t\tconst [charW, lineH] = getTextSize(td);\r\n\t\treturn { padH, padV, charW, lineH };\r\n\t}\r\n\r\n\tfunction getTextSize(elm) {\r\n\t\tconst temp = document.createElement(elm.nodeName);\r\n\t\ttemp.setAttribute('style', `position:fixed;margin:0;padding:0;font-family:${elm.style.fontFamily || 'inherit'};font-size:${elm.style.fontSize || 'inherit'};`);\r\n\t\ttemp.innerHTML = '\\u3000';  // Full width space\r\n\t\telm.parentNode.appendChild(temp);\r\n\t\tconst w = temp.clientWidth;\r\n\t\tconst h = temp.clientHeight;\r\n\t\ttemp.parentNode.removeChild(temp);\r\n\t\treturn [w, h];\r\n\t}\r\n\r\n\tfunction apply(tab, cMet) {\r\n\t\tif (tab.rows.length === 0) return false;\r\n\t\tif (cMet.maxRowSize < tab.rows.length) return false;\r\n\t\tif (!isResizeNeeded(tab, cMet)) return false;\r\n\r\n\t\tif (tab.hasAttribute('width')) tab.removeAttribute('width');\r\n\t\ttab.style.width    = '';\r\n\t\ttab.style.maxWidth = '';\r\n\r\n\t\tconst grid  = makeCellGrid(tab);\r\n\t\tconst met   = Object.assign(getMetrics(tab, grid), cMet);\r\n\t\tconst newWs = calcNewWidths(grid, met);\r\n\t\tsetCellWidth(grid, newWs);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tfunction isResizeNeeded(tab, cMet) {\r\n\t\tconst { cellMinWidth, cellMinAspect } = cMet;\r\n\t\tfor (const tr of tab.rows) {\r\n\t\t\tif (!tr.hasChildNodes()) continue;\r\n\t\t\tfor (const n of tr.childNodes) {\r\n\t\t\t\tconst tn = n.tagName;\r\n\t\t\t\tif (tn !== 'TD' && tn !== 'TH') continue;\r\n\t\t\t\tif (1 < parseInt(n.getAttribute('colSpan'), 10)) continue;\r\n\t\t\t\tif (1 < parseInt(n.getAttribute('rowSpan'), 10)) continue;\r\n\t\t\t\tconst cw = n.clientWidth;\r\n\t\t\t\tconst ch = n.clientHeight;\r\n\t\t\t\tif (cw < cellMinWidth || cw / ch < cellMinAspect) return true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\t// -------------------------------------------------------------------------\r\n\r\n\r\n\tfunction makeCellGrid(t) {\r\n\t\tconst css = collectCells(t);\r\n\t\tlet maxWidth = 0;\r\n\t\tfor (const cs of css) maxWidth = Math.max(maxWidth, cs.length);\r\n\t\tconst g = [];\r\n\t\tfor (const cs of css) g.push(new Array(maxWidth));\r\n\r\n\t\tfor (let y = 0; y < g.length; y += 1) {\r\n\t\t\tconst gr = g[y];\r\n\t\t\tconst tds = css[y];\r\n\t\t\tlet i = 0;\r\n\r\n\t\t\tfor (let x = 0; x < maxWidth; x += 1) {\r\n\t\t\t\tif (typeof gr[x] === 'number' || gr[x] === null) continue;\r\n\r\n\t\t\t\tconst td = tds[i]\r\n\t\t\t\tconst col = parseInt(td.getAttribute('colSpan') ?? 1, 10);\r\n\t\t\t\tconst row = parseInt(td.getAttribute('rowSpan') ?? 1, 10);\r\n\t\t\t\tgr[x] = td;\r\n\r\n\t\t\t\tif (1 < col) {\r\n\t\t\t\t\tfor (let p = 1; p < col; p += 1) gr[x + p] = p;\r\n\t\t\t\t}\r\n\t\t\t\tif (1 < row) {\r\n\t\t\t\t\tfor (let q = 1; q < row; q += 1) {\r\n\t\t\t\t\t\tconst nr = g[y + q];\r\n\t\t\t\t\t\tfor (let p = 0; p < col; p += 1) nr[x + p] = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\ti += 1;\r\n\t\t\t\tif (tds.length <= i) break;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn g;\r\n\t}\r\n\r\n\tfunction collectCells(t, css = []) {\r\n\t\tfor (const tr of t.rows) {\r\n\t\t\tconst cs = [];\r\n\t\t\tif (tr.hasChildNodes()) {\r\n\t\t\t\tfor (const n of tr.childNodes) {\r\n\t\t\t\t\tconst tn = n.tagName;\r\n\t\t\t\t\tif (tn === 'TD' || tn === 'TH') cs.push(n);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tcss.push(cs);\r\n\t\t}\r\n\t\treturn css;\r\n\t}\r\n\r\n\r\n\t// -------------------------------------------------------------------------\r\n\r\n\r\n\tfunction getMetrics(tab, grid) {\r\n\t\tconst origTabW = tab.clientWidth;\r\n\t\tconst origCellWs = [];\r\n\t\tfor (let x = 0; x < grid[0].length; x += 1) {\r\n\t\t\tfor (let y = 0; y < grid.length; y += 1) {\r\n\t\t\t\tconst g = grid[y][x];\r\n\t\t\t\tif (g instanceof HTMLTableCellElement && !g.getAttribute('colSpan')) {\r\n\t\t\t\t\torigCellWs.push(g.clientWidth);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn { origTabW, origCellWs };\r\n\t}\r\n\r\n\r\n\t// -------------------------------------------------------------------------\r\n\r\n\r\n\tfunction calcNewWidths(grid, met) {\r\n\t\tfor (const gr of grid) {\r\n\t\t\tfor (const gc of gr) {\r\n\t\t\t\tif (typeof gc !== 'number' && gc !== null) gc.style.whiteSpace = 'nowrap';\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst gw = grid[0].length;\r\n\t\tconst newWs = new Array(gw).fill(false);\r\n\t\tconst wrapped = new Array(gw).fill(false);\r\n\r\n\t\tfor (let y = 0; y < grid.length; y += 1) {\r\n\t\t\tconst gridRow = grid[y];\r\n\r\n\t\t\tfor (let x = 0; x < gw; x += 1) {\r\n\t\t\t\tconst td = gridRow[x];\r\n\t\t\t\tif (td === undefined || td === null || typeof td === 'number') continue;\r\n\t\t\t\tif (x < gw - 1 && typeof gridRow[x + 1] === 'number') continue;\r\n\t\t\t\tif (1 < parseInt(td.getAttribute('colSpan'), 10)) continue;\r\n\t\t\t\tif (1 < parseInt(td.getAttribute('rowSpan'), 10)) continue;\r\n\r\n\t\t\t\tconst [minW, wp] = calcMinWidth(td, met);\r\n\t\t\t\tif (minW) newWs[x] = Math.max(newWs[x], minW);\r\n\t\t\t\tif (wp) wrapped[x] = wp;\r\n\t\t\t}\r\n\t\t}\r\n\t\twidenTabWidth(newWs, wrapped, met);\r\n\t\treturn newWs;\r\n\t}\r\n\r\n\tfunction calcMinWidth(td, met) {\r\n\t\tconst { padH, padV, charW, lineH, cellMinWidth, dcTd, dcTh, cellMinAspect, minCharSize } = met;\r\n\t\tif (calcMaxLineLength(td) < minCharSize) return [0, false];\r\n\r\n\t\ttd.innerHTML = td.innerHTML.trim();\r\n\t\tconst dc = td.tagName === 'TD' ? dcTd : dcTh;\r\n\t\tdc.innerHTML = td.innerHTML;\r\n\t\tconst aw = dc.clientWidth - padH;\r\n\t\tconst ls = Math.round((dc.clientHeight - padV) / lineH);\r\n\t\tlet minW = 0, wrapped = false;\r\n\t\tfor (let i = 1; ; i += 1) {\r\n\t\t\tconst tempW = 0 | (aw / i + charW * i + padH);\r\n\t\t\tconst tempH = ls * (i * lineH) + padV;\r\n\t\t\tif (tempW < cellMinWidth || tempW / tempH < cellMinAspect || (minW && minW < tempW)) break;\r\n\t\t\tif (1 < i) wrapped = true;\r\n\t\t\tminW = tempW;\r\n\t\t}\r\n\t\treturn [minW, wrapped];\r\n\t}\r\n\r\n\tfunction calcMaxLineLength(td) {\r\n\t\tconst ih = td.innerHTML.trim();\r\n\t\tlet ls = ih.split(/<\\s*br\\s*\\/?>/ui);\r\n\t\tif (ls.length === 0) ls = [ih];\r\n\t\tconst ts = ls.map(e => e.replace(/<(\"[^\"]*\"|'[^']*'|[^'\">])*>/g, '').length);\r\n\t\treturn Math.max(...ts);\r\n\t}\r\n\r\n\tfunction widenTabWidth(newWs, wrapped, met) {\r\n\t\tconst { origTabW, origCellWs } = met;\r\n\t\tlet wNew = 0, wFix = 0;\r\n\t\tfor (let i = 0; i < newWs.length; i += 1) {\r\n\t\t\tif (wrapped[i]) {\r\n\t\t\t\twNew += newWs[i];\r\n\t\t\t} else if (newWs[i]) {\r\n\t\t\t\twFix += newWs[i];\r\n\t\t\t} else {\r\n\t\t\t\twFix += origCellWs[i];\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (origTabW < wNew + wFix) return;\r\n\t\tlet rem = origTabW - wFix;\r\n\t\tfor (let i = 0; i < newWs.length; i += 1) {\r\n\t\t\tif (!wrapped[i]) continue;\r\n\t\t\tconst nw = newWs[i];\r\n\t\t\tconst w = Math.min(nw / wNew * rem, origCellWs[i]);\r\n\t\t\trem  -= (w - nw);\r\n\t\t\twNew -= (w - nw);\r\n\t\t\tnewWs[i] = 0 | w;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t// -------------------------------------------------------------------------\r\n\r\n\r\n\tfunction setCellWidth(grid, ws) {\r\n\t\tfor (const gr of grid) {\r\n\t\t\tfor (let x = 0; x < gr.length; x += 1) {\r\n\t\t\t\tconst gc = gr[x], w = ws[x];\r\n\t\t\t\tif (w === false || !(gc instanceof HTMLTableCellElement)) continue;\r\n\t\t\t\tgc.style.whiteSpace = null;\r\n\t\t\t\tgc.style.minWidth   = w + 'px';\r\n\t\t\t\tgc.style.width      = null;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n})(window.NACSS);\r\n"]}