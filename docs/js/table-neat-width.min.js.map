{"version":3,"sources":["table-neat-width.js"],"names":["window","NS","makeDummyCell","t","tagName","d","document","createElement","setAttribute","appendChild","removeDummyCell","lt","cMat","removeChild","dcTd","dcTh","isTarget","tab","cMet","rows","length","maxRowSize","cellMinWidth","cellMinAspect","tr","hasChildNodes","n","childNodes","tn","parseInt","getAttribute","cw","clientWidth","ch","clientHeight","onScroll","scrollWidth","r","scrollLeft","setClass","styleScrollRight","styleScrollLeft","apply","removeAttribute","style","width","height","grid","css","cs","push","collectCells","maxWidth","Math","max","g","Array","y","gr","tds","i","x","td","col","row","p","q","nr","makeCellGrid","met","Object","assign","origTabW","origCellWs","HTMLTableCellElement","getMetrics","newWs","gc","whiteSpace","gw","fill","fixWs","minW","calcMinWidth","wNew","wFix","rem","nw","w","min","widenTabWidth","calcNewWidths","ws","minWidth","setCellWidth","getElementsByTagName","innerHTML","padH","padV","charW","lineH","cellMinLength","ih","trim","ts","split","map","e","replace","calcMaxLineLength","dc","aw","ls","round","tempW","tempH","tar","cls","enabled","val","key","substr","startsWith","dataset","c","join","classList","add","remove","throttle","fn","isRunning","args","requestAnimationFrame","tableNeatWidth","tabs","opts","cm","fullWidthRate","maxBorderWidth","before","after","styleNeat","styleFull","s","getComputedStyle","parseFloat","paddingLeft","paddingRight","paddingTop","paddingBottom","elm","nodeName","fontFamily","fontSize","parentNode","h","getTextSize","getCommonMetrics","tarTabs","noTarTabs","gcCount","delay","setTimeout","parentElement","rob","ResizeObserver","oes","oe","target","observe","addEventListener","initScroll","resizeListeners","l","passive"],"mappings":"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","file":"table-neat-width.min.js","sourcesContent":["/**\n *\n * Table Style - Neat Width (JS)\n *\n * @author Takuto Yanagida\n * @version 2021-11-11\n *\n */\n\n\nwindow['NACSS'] = window['NACSS'] || {};\n\n\n(function (NS) {\n\n\t/**\n\t *\n\t * Neat Width\n\t *\n\t * @author Takuto Yanagida\n\t * @version 2021-11-11\n\t *\n\t */\n\t\n\t\n\tfunction initialize(tabs, opts = {}) {\n\t\tif (tabs.length === 0) return;\n\t\n\t\tconst lt = tabs[tabs.length - 1];\n\t\tconst cm = Object.assign({\n\t\t\tfullWidthRate   : 0.95,\n\t\t\tcellMinWidth    : 80,\n\t\t\tcellMinAspect   : 2 / 3,  // width / height\n\t\t\tcellMinLength   : 8,\n\t\t\tmaxRowSize      : 200,\n\t\t\tmaxBorderWidth  : 2,\n\t\t\tbefore          : null,  // function (table) { ...; return delay; }\n\t\t\tafter           : null,  // function (table) { ... }\n\t\t\tstyleNeat       : ':ncTableNeat',\n\t\t\tstyleFull       : ':ncTableFull',\n\t\t\tstyleScrollRight: ':ncScrollRight',\n\t\t\tstyleScrollLeft : ':ncScrollLeft',\n\t\t}, opts, getCommonMetrics(lt));\n\t\n\t\tcm.padH += cm.maxBorderWidth * 2;\n\t\tcm.padV += cm.maxBorderWidth * 2;\n\t\tcm.dcTd = makeDummyCell(lt, 'td');\n\t\tcm.dcTh = makeDummyCell(lt, 'th');\n\t\n\t\tconst tarTabs = [], noTarTabs = [];\n\t\tfor (const t of tabs) {\n\t\t\tif (isTarget(t, cm)) tarTabs.push(t);\n\t\t\telse noTarTabs.push(t);\n\t\t}\n\t\tcm.gcCount = tarTabs.length;\n\t\n\t\tfor (const t of tarTabs) {\n\t\t\tconst delay = (cm.before) ? (cm.before(t) ?? 0) : false;\n\t\t\tst(() => {\n\t\t\t\tapply(t, cm);\n\t\t\t\tsetClass(t, cm.styleNeat);\n\t\t\t\tif (cm.after) cm.after(t);\n\t\t\t\tif (--cm.gcCount === 0) removeDummyCell(lt, cm);\n\t\t\t}, delay);\n\t\t}\n\t\tif (cm.fullWidthRate) {\n\t\t\tfor (const t of noTarTabs) {\n\t\t\t\tconst pw = t.parentElement.clientWidth;\n\t\t\t\tif (pw * cm.fullWidthRate < t.clientWidth) setClass(t, cm.styleFull);\n\t\t\t}\n\t\t}\n\t\tfunction st(fn, d) { (d === false) ? fn() : setTimeout(fn, d); }\n\t\tinitScroll(tarTabs, cm);\n\t}\n\t\n\tfunction getCommonMetrics(tab) {\n\t\tconst td = tab.getElementsByTagName('td')[0];\n\t\tconst s = getComputedStyle(td);\n\t\tconst padH  = parseFloat(s.paddingLeft) + parseFloat(s.paddingRight);\n\t\tconst padV  = parseFloat(s.paddingTop) + parseFloat(s.paddingBottom);\n\t\tconst [charW, lineH] = getTextSize(td);\n\t\treturn { padH, padV, charW, lineH };\n\t}\n\t\n\tfunction getTextSize(elm) {\n\t\tconst d = document.createElement(elm.nodeName);\n\t\td.setAttribute('style', `position:fixed;margin:0;padding:0;font-family:${elm.style.fontFamily || 'inherit'};font-size:${elm.style.fontSize || 'inherit'};`);\n\t\td.innerHTML = '\\u3000';  // Full width space\n\t\telm.parentNode.appendChild(d);\n\t\tconst w = d.clientWidth;\n\t\tconst h = d.clientHeight;\n\t\td.parentNode.removeChild(d);\n\t\treturn [w, h];\n\t}\n\t\n\tfunction makeDummyCell(t, tagName) {\n\t\tconst d = document.createElement(tagName);\n\t\td.setAttribute('style', `position:fixed;display:inline-block;visibility:hidden;white-space:nowrap;`);\n\t\treturn t.appendChild(d);\n\t}\n\t\n\tfunction removeDummyCell(lt, cMat) {\n\t\tlt.removeChild(cMat.dcTd);\n\t\tlt.removeChild(cMat.dcTh);\n\t}\n\t\n\tfunction isTarget(tab, cMet) {\n\t\tif (tab.rows.length === 0) return false;\n\t\tif (cMet.maxRowSize < tab.rows.length) return false;\n\t\n\t\tconst { cellMinWidth, cellMinAspect } = cMet;\n\t\tfor (const tr of tab.rows) {\n\t\t\tif (!tr.hasChildNodes()) continue;\n\t\t\tfor (const n of tr.childNodes) {\n\t\t\t\tconst tn = n.tagName;\n\t\t\t\tif (tn !== 'TD' && tn !== 'TH') continue;\n\t\t\t\tif (1 < parseInt(n.getAttribute('colSpan'), 10)) continue;\n\t\t\t\tif (1 < parseInt(n.getAttribute('rowSpan'), 10)) continue;\n\t\t\t\tconst cw = n.clientWidth;\n\t\t\t\tconst ch = n.clientHeight;\n\t\t\t\tif (cw < cellMinWidth || cw / ch < cellMinAspect) return true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\t\n\t\n\t// -------------------------------------------------------------------------\n\t\n\t\n\tfunction initScroll(tabs, cMet) {\n\t\tconst rob = new ResizeObserver(oes => {\n\t\t\tfor (const oe of oes) onScroll(oe.target, cMet);\n\t\t});\n\t\tfor (const t of tabs) {\n\t\t\trob.observe(t);\n\t\t\tt.addEventListener('scroll', throttle(() => { onScroll(t, cMet); }));\n\t\t}\n\t}\n\t\n\tfunction onScroll(tab, cMet) {\n\t\tif (tab.scrollWidth - tab.clientWidth > 2) {  // for avoiding needless scrolling\n\t\t\tconst r = tab.scrollLeft / (tab.scrollWidth - tab.clientWidth);\n\t\t\tsetClass(tab, cMet.styleScrollRight, r < 0.95);\n\t\t\tsetClass(tab, cMet.styleScrollLeft, 0.05 < r);\n\t\t} else {\n\t\t\tsetClass(tab, cMet.styleScrollRight, false);\n\t\t\tsetClass(tab, cMet.styleScrollLeft, false);\n\t\t}\n\t}\n\t\n\t\n\t// -------------------------------------------------------------------------\n\t\n\t\n\tfunction apply(tab, cMet) {\n\t\ttab.removeAttribute('width');\n\t\tif (tab.style.width) tab.style.width = null;\n\t\tif (tab.style.height) tab.style.height = null;\n\t\n\t\tconst grid  = makeCellGrid(tab);\n\t\tconst met   = Object.assign(getMetrics(tab, grid), cMet);\n\t\tconst newWs = calcNewWidths(grid, met);\n\t\tsetCellWidth(grid, newWs);\n\t\n\t\tconst cs = tab.getElementsByTagName('caption');\n\t\tif (cs.length) cs[0].innerHTML = `<span>${cs[0].innerHTML}</span>`;\n\t}\n\t\n\t\n\t// -------------------------------------------------------------------------\n\t\n\t\n\tfunction makeCellGrid(t) {\n\t\tconst css = collectCells(t);\n\t\tlet maxWidth = 0;\n\t\tfor (const cs of css) maxWidth = Math.max(maxWidth, cs.length);\n\t\tconst g = [];\n\t\tfor (const cs of css) g.push(new Array(maxWidth));\n\t\n\t\tfor (let y = 0; y < g.length; y += 1) {\n\t\t\tconst gr = g[y];\n\t\t\tconst tds = css[y];\n\t\t\tlet i = 0;\n\t\n\t\t\tfor (let x = 0; x < maxWidth; x += 1) {\n\t\t\t\tif (typeof gr[x] === 'number' || gr[x] === null) continue;\n\t\n\t\t\t\tconst td = tds[i]\n\t\t\t\tconst col = parseInt(td.getAttribute('colSpan') ?? 1, 10);\n\t\t\t\tconst row = parseInt(td.getAttribute('rowSpan') ?? 1, 10);\n\t\t\t\tgr[x] = td;\n\t\n\t\t\t\tif (1 < col) {\n\t\t\t\t\tfor (let p = 1; p < col; p += 1) gr[x + p] = p;\n\t\t\t\t}\n\t\t\t\tif (1 < row) {\n\t\t\t\t\tfor (let q = 1; q < row; q += 1) {\n\t\t\t\t\t\tconst nr = g[y + q];\n\t\t\t\t\t\tfor (let p = 0; p < col; p += 1) nr[x + p] = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ti += 1;\n\t\t\t\tif (tds.length <= i) break;\n\t\t\t}\n\t\t}\n\t\treturn g;\n\t}\n\t\n\tfunction collectCells(t, css = []) {\n\t\tfor (const tr of t.rows) {\n\t\t\tconst cs = [];\n\t\t\tif (tr.hasChildNodes()) {\n\t\t\t\tfor (const n of tr.childNodes) {\n\t\t\t\t\tconst tn = n.tagName;\n\t\t\t\t\tif (tn === 'TD' || tn === 'TH') cs.push(n);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcss.push(cs);\n\t\t}\n\t\treturn css;\n\t}\n\t\n\t\n\t// -------------------------------------------------------------------------\n\t\n\t\n\tfunction getMetrics(tab, grid) {\n\t\tconst origTabW = tab.clientWidth;\n\t\tconst origCellWs = [];\n\t\tfor (let x = 0; x < grid[0].length; x += 1) {\n\t\t\tfor (let y = 0; y < grid.length; y += 1) {\n\t\t\t\tconst g = grid[y][x];\n\t\t\t\tif (g instanceof HTMLTableCellElement && !g.getAttribute('colSpan')) {\n\t\t\t\t\torigCellWs.push(g.clientWidth);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn { origTabW, origCellWs };\n\t}\n\t\n\t\n\t// -------------------------------------------------------------------------\n\t\n\t\n\tfunction calcNewWidths(grid, met) {\n\t\tfor (const gr of grid) {\n\t\t\tfor (const gc of gr) {\n\t\t\t\tif (typeof gc !== 'number' && gc !== null) gc.style.whiteSpace = 'nowrap';\n\t\t\t}\n\t\t}\n\t\tconst gw = grid[0].length;\n\t\tconst newWs = new Array(gw).fill(0);\n\t\tconst fixWs = new Array(gw).fill(0);\n\t\n\t\tfor (const gr of grid) {\n\t\t\tfor (let x = 0; x < gw; x += 1) {\n\t\t\t\tconst td = gr[x];\n\t\t\t\tif (td === undefined || td === null || typeof td === 'number') continue;\n\t\t\t\tif (x < gw - 1 && typeof gr[x + 1] === 'number') continue;\n\t\t\t\tif (1 < parseInt(td.getAttribute('colSpan'), 10)) continue;\n\t\t\t\tif (1 < parseInt(td.getAttribute('rowSpan'), 10)) continue;\n\t\n\t\t\t\tconst minW = calcMinWidth(td, met);\n\t\t\t\tnewWs[x] = Math.max(newWs[x], minW);\n\t\t\t\tif (!minW) fixWs[x] = Math.max(fixWs[x], td.clientWidth);\n\t\t\t}\n\t\t}\n\t\twidenTabWidth(newWs, fixWs, met);\n\t\treturn newWs;\n\t}\n\t\n\tfunction calcMinWidth(td, met) {\n\t\tconst { padH, padV, charW, lineH, dcTd, dcTh, cellMinWidth, cellMinAspect, cellMinLength } = met;\n\t\tif (calcMaxLineLength(td) < cellMinLength) return 0;\n\t\n\t\ttd.innerHTML = td.innerHTML.trim();\n\t\tconst dc = td.tagName === 'TD' ? dcTd : dcTh;\n\t\tdc.innerHTML = td.innerHTML;\n\t\tconst aw = dc.clientWidth - padH;\n\t\tconst ls = Math.round((dc.clientHeight - padV) / lineH);\n\t\tlet minW = 0;\n\t\tfor (let i = 2;; i += 1) {\n\t\t\tconst tempW = 0 | (aw / i + charW * i + padH);\n\t\t\tconst tempH = ls * (i * lineH) + padV;\n\t\t\tif (tempW < cellMinWidth || tempW / tempH < cellMinAspect || (minW && minW < tempW)) break;\n\t\t\tminW = tempW;\n\t\t}\n\t\treturn (minW + charW < dc.clientWidth) ? minW : 0;\n\t}\n\t\n\tfunction calcMaxLineLength(td) {\n\t\tconst ih = td.innerHTML.trim();\n\t\tconst ls = ih.split(/<\\s*br\\s*\\/?>/ui);\n\t\tconst ts = ls.map(e => e.replace(/<(\"[^\"]*\"|'[^']*'|[^'\">])*>/g, '').length);\n\t\treturn Math.max(...ts);\n\t}\n\t\n\tfunction widenTabWidth(newWs, fixWs, met) {\n\t\tconst { origTabW, origCellWs } = met;\n\t\tlet wNew = 0, wFix = 0;\n\t\tfor (let i = 0; i < newWs.length; i += 1) {\n\t\t\tif (newWs[i]) {\n\t\t\t\twNew += newWs[i];\n\t\t\t} else {\n\t\t\t\twFix += fixWs[i];\n\t\t\t}\n\t\t}\n\t\tif (origTabW < wNew + wFix) return;\n\t\tlet rem = origTabW - wFix;\n\t\tfor (let i = 0; i < newWs.length; i += 1) {\n\t\t\tif (!newWs[i]) continue;\n\t\t\tconst nw = newWs[i];\n\t\t\tconst w = Math.min(nw / wNew * rem, origCellWs[i]);\n\t\t\trem  -= (w - nw);\n\t\t\twNew -= (w - nw);\n\t\t\tnewWs[i] = 0 | w;\n\t\t}\n\t}\n\t\n\t\n\t// -------------------------------------------------------------------------\n\t\n\t\n\tfunction setCellWidth(grid, ws) {\n\t\tfor (const gr of grid) {\n\t\t\tfor (let x = 0; x < gr.length; x += 1) {\n\t\t\t\tconst gc = gr[x], w = ws[x];\n\t\t\t\tif (!w || !(gc instanceof HTMLTableCellElement)) continue;\n\t\t\t\tgc.style.whiteSpace = null;\n\t\t\t\tgc.style.minWidth   = w + 'px';\n\t\t\t\tgc.style.width      = null;\n\t\t\t}\n\t\t}\n\t}\n\tNS.tableNeatWidth = initialize;\n\n\t/**\n\t *\n\t * Style Class Utilities\n\t *\n\t * @author Takuto Yanagida\n\t * @version 2021-11-11\n\t *\n\t */\n\t\n\t\n\tfunction hasClass(tar, cls) {\n\t\tconst key = cls.substr(1);\n\t\tif (cls.startsWith(':')) {\n\t\t\treturn tar.dataset[key] !== undefined;\n\t\t} else {\n\t\t\treturn tar.classList.contains(key);\n\t\t}\n\t}\n\t\n\tfunction setClass(tar, cls, enabled = true, val = '') {\n\t\tconst key = cls.substr(1);\n\t\tif (cls.startsWith(':')) {\n\t\t\tif (enabled) {\n\t\t\t\ttar.dataset[key] = val;\n\t\t\t} else {\n\t\t\t\tdelete tar.dataset[key];\n\t\t\t}\n\t\t} else {\n\t\t\tconst c = [key, val].join('-');\n\t\t\tif (enabled) {\n\t\t\t\ttar.classList.add(c);\n\t\t\t} else {\n\t\t\t\ttar.classList.remove(c);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction getSelector(cls) {\n\t\tif (cls.startsWith(':')) {\n\t\t\treturn `*[data-${cls.substr(1).replace(/([A-Z])/g, c => '-' + c.charAt(0).toLowerCase())}]`;\n\t\t} else {\n\t\t\treturn `*${cls}`;\n\t\t}\n\t}\n\t\n\t/**\n\t *\n\t * Utilities\n\t *\n\t * @author Takuto Yanagida\n\t * @version 2021-11-11\n\t *\n\t */\n\t\n\t\n\tfunction getScrollOffset() {\n\t\tconst s = getComputedStyle(document.documentElement);\n\t\treturn parseInt(s.scrollPaddingTop);\n\t}\n\t\n\t\n\t// -----------------------------------------------------------------------------\n\t\n\t\n\tfunction throttle(fn) {\n\t\tlet isRunning;\n\t\treturn (...args) => {\n\t\t\tif (isRunning) return;\n\t\t\tisRunning = true;\n\t\t\trequestAnimationFrame(() => {\n\t\t\t\tisRunning = false;\n\t\t\t\tfn(...args);\n\t\t\t});\n\t\t};\n\t}\n\t\n\tconst resizeListeners = [];\n\t\n\tfunction onResize(fn, doFirst = false) {\n\t\tif (doFirst) fn();\n\t\tresizeListeners.push(throttle(fn));\n\t}\n\t\n\tdocument.addEventListener('DOMContentLoaded', () => {\n\t\twindow.addEventListener('resize', () => {\n\t\t\tfor (const l of resizeListeners) l();\n\t\t}, { passive: true });\n\t});\n\t\n\n})(window['NACSS']);\n"]}