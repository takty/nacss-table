{"version":3,"sources":["table-scroll.js","_scroll.js"],"names":["window","NACSS","NS","scrollBarWidth","throttle","fn","isRunning","requestAnimationFrame","FixedHeaderTable","constructor","tab","this","_table","_headerHeight","_windowWidth","_create","setTimeout","_initialize","_sbar","_createScrollBarClone","caps","getElementsByTagName","_capt","length","e","document","createElement","dataset","stile","spacer","appendChild","parentNode","_initTableScroll","onWindowResize","tableScrollChanged","sbarScrollChanged","addEventListener","scrollLeft","t","style","overflowX","scrollWidth","clientWidth","ww","Math","min","outerWidth","innerWidth","b","maxWidth","display","h","parseInt","_getScrollBarWidth","height","firstChild","width","onWindowScroll","tr","getBoundingClientRect","tabTop","top","tabBottom","bottom","capH","offsetHeight","headH","sbarVisible","innerHeight","left","d","setAttribute","body","getComputedStyle","getPropertyValue","overflowY","c","minHeight","cw","offsetWidth","removeChild","tableScroll","tabs","conts","i","push","passive"],"mappings":"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","file":"table-scroll.min.js","sourcesContent":["/**\n *\n * Table Style - Scroll (JS)\n *\n * @author Takuto Yanagida\n * @version 2021-01-15\n *\n */\n\n\nwindow.NACSS = window['NACSS'] || {};\n\n\n(function (NS) {\n\n\t/**\r\n\t *\r\n\t * Scroll (JS)\r\n\t *\r\n\t * @author Takuto Yanagida\r\n\t * @version 2021-01-15\r\n\t *\r\n\t */\r\n\t\r\n\t\r\n\tconst ST_SCROLL_BAR = 'fixed-table-scroll-bar';\r\n\tconst CAPABLE_WINDOW_HEIGHT_RATIO = 0.9;\r\n\t\r\n\tlet getOffset = () => { return 0; };\r\n\tlet scrollBarWidth;\r\n\t\r\n\t\r\n\t// -------------------------------------------------------------------------\r\n\t\r\n\t\r\n\tfunction initialize(tabs) {\r\n\t\tscrollBarWidth = parseInt(_getScrollBarWidth());\r\n\t\tconst conts = [];\r\n\t\tfor (let i = 0; i < tabs.length; i += 1) conts.push(new FixedHeaderTable(tabs[i]));\r\n\t\twindow.addEventListener('scroll', throttle(() => { for (let i = 0; i < conts.length; i += 1) conts[i].onWindowScroll(); }), { passive: true });\r\n\t\twindow.addEventListener('resize', throttle(() => { for (let i = 0; i < conts.length; i += 1) conts[i].onWindowResize(); }), { passive: true });\r\n\t}\r\n\t\r\n\tfunction throttle(fn) {\r\n\t\tlet isRunning;\r\n\t\treturn () => {\r\n\t\t\tif (isRunning) return;\r\n\t\t\tisRunning = true;\r\n\t\t\trequestAnimationFrame(() => {\r\n\t\t\t\tisRunning = false;\r\n\t\t\t\tfn();\r\n\t\t\t});\r\n\t\t};\r\n\t}\r\n\t\r\n\tclass FixedHeaderTable {\r\n\t\r\n\t\tconstructor (tab) {\r\n\t\t\tthis._table        = tab;\r\n\t\t\tthis._headerHeight = 0;\r\n\t\t\tthis._windowWidth  = 0;\r\n\t\t\tthis._create();\r\n\t\t\tsetTimeout(() => { this._initialize(); }, 10);\r\n\t\t}\r\n\t\r\n\t\t_create() {\r\n\t\t\tthis._sbar = this._createScrollBarClone();\r\n\t\t\tconst caps = this._table.getElementsByTagName('caption');\r\n\t\t\tthis._capt = caps.length ? caps[0] : null;\r\n\t\t}\r\n\t\r\n\t\t_createScrollBarClone() {\r\n\t\t\tconst e = document.createElement('div');\r\n\t\t\te.dataset.stile += ' ' + ST_SCROLL_BAR;\r\n\t\t\tconst spacer = document.createElement('div');\r\n\t\t\te.appendChild(spacer);\r\n\t\t\tthis._table.parentNode.appendChild(e);\r\n\t\t\treturn e;\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// ---------------------------------------------------------------------\r\n\t\r\n\t\r\n\t\t_initialize() {\r\n\t\t\tthis._initTableScroll();\r\n\t\t\tthis.onWindowResize();\r\n\t\t}\r\n\t\r\n\t\t_initTableScroll() {\r\n\t\t\tlet tableScrollChanged = false;\r\n\t\t\tlet sbarScrollChanged  = false;\r\n\t\t\tthis._table.addEventListener('scroll', throttle(() => {\r\n\t\t\t\tif (tableScrollChanged) {\r\n\t\t\t\t\ttableScrollChanged = false;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._sbar.scrollLeft = this._table.scrollLeft;\r\n\t\t\t\t\tsbarScrollChanged = true;\r\n\t\t\t\t}\r\n\t\t\t}));\r\n\t\t\tthis._sbar.addEventListener('scroll', throttle(() => {\r\n\t\t\t\tif (sbarScrollChanged) {\r\n\t\t\t\t\tsbarScrollChanged = false;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._table.scrollLeft = this._sbar.scrollLeft;\r\n\t\t\t\t\ttableScrollChanged = true;\r\n\t\t\t\t}\r\n\t\t\t}));\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// ---------------------------------------------------------------------\r\n\t\r\n\t\r\n\t\tonWindowResize() {\r\n\t\t\tconst t = this._table;\r\n\t\t\tt.style.overflowX = (t.scrollWidth < t.clientWidth + 2) ? 'hidden' : '';\r\n\t\t\tconst ww = Math.min(window.outerWidth, window.innerWidth);  // for iOS\r\n\t\t\tif (this._windowWidth === ww) return;\r\n\t\t\tthis._windowWidth = ww;\r\n\t\t\tif (this._sbar) {\r\n\t\t\t\tconst b = this._sbar;\r\n\t\t\t\tb.style.maxWidth = `${t.clientWidth}px`;\r\n\t\t\t\tb.style.display = 'none';\r\n\t\t\t\tconst h = parseInt(_getScrollBarWidth());\r\n\t\t\t\tif (0 < h) b.style.height = (h + 2) + 'px';\r\n\t\t\t\tb.firstChild.style.width = `${t.scrollWidth}px`;\r\n\t\t\t\tthis.onWindowScroll();\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// ---------------------------------------------------------------------\r\n\t\r\n\t\r\n\t\tonWindowScroll() {\r\n\t\t\tconst t = this._table;\r\n\t\t\tconst tr     = t.getBoundingClientRect();\r\n\t\t\tconst tabTop = tr.top, tabBottom = tr.bottom;\r\n\t\t\tconst offset = getOffset();\r\n\t\t\tconst capH   = this._capt ? this._capt.offsetHeight : 0;\r\n\t\t\tconst headH  = this._headerHeight;\r\n\t\t\tconst inView = tabBottom - tabTop - capH < CAPABLE_WINDOW_HEIGHT_RATIO * (window.innerHeight - offset);\r\n\t\r\n\t\t\tlet sbarVisible = false;\r\n\t\t\tif (inView) {  // do nothing\r\n\t\t\t} else if (window.innerHeight < tabTop + capH + headH) {  // do nothing\r\n\t\t\t} else if (tabBottom < window.innerHeight) {  // do nothing\r\n\t\t\t} else if (t.scrollWidth - t.clientWidth > 2) {\r\n\t\t\t\tsbarVisible = true;\r\n\t\t\t}\r\n\t\t\tif (this._sbar) {\r\n\t\t\t\tconst b = this._sbar;\r\n\t\t\t\tb.style.display = sbarVisible ? 'block' : 'none';\r\n\t\t\t\tb.style.left = tr.left + 'px';\r\n\t\t\t\tb.scrollLeft = t.scrollLeft;\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t}\r\n\t\r\n\t\r\n\t// Utilities ---------------------------------------------------------------\r\n\t\r\n\t\r\n\tfunction _getScrollBarWidth() {\r\n\t\tconst d = document.createElement('div');\r\n\t\td.setAttribute('style', `position:absolute;bottom:100%;width:calc(100vw - 100%);height:1px;`);\r\n\t\tdocument.body.appendChild(d);\r\n\t\tlet width = 0 | window.getComputedStyle(d).getPropertyValue('width');\r\n\t\r\n\t\tif (width === 0) {  // Window does not have any scroll bar\r\n\t\t\td.style.overflowY = 'scroll';\r\n\t\t\td.style.width = '';\r\n\t\t\tconst c = document.createElement('div');\r\n\t\t\tc.style.minHeight = '100px';\r\n\t\t\td.appendChild(c);\r\n\t\t\tconst cw = 0 | window.getComputedStyle(c).getPropertyValue('width');\r\n\t\t\twidth = d.offsetWidth - cw;\r\n\t\t}\r\n\t\tdocument.body.removeChild(d);\r\n\t\treturn width;\r\n\t}\r\n\t\n\tNS.tableScroll = initialize;\n\n})(window.NACSS);\n","/**\r\n *\r\n * Scroll (JS)\r\n *\r\n * @author Takuto Yanagida\r\n * @version 2021-01-15\r\n *\r\n */\r\n\r\n\r\nconst ST_SCROLL_BAR = 'fixed-table-scroll-bar';\r\nconst CAPABLE_WINDOW_HEIGHT_RATIO = 0.9;\r\n\r\nlet getOffset = () => { return 0; };\r\nlet scrollBarWidth;\r\n\r\n\r\n// -------------------------------------------------------------------------\r\n\r\n\r\nfunction initialize(tabs) {\r\n\tscrollBarWidth = parseInt(_getScrollBarWidth());\r\n\tconst conts = [];\r\n\tfor (let i = 0; i < tabs.length; i += 1) conts.push(new FixedHeaderTable(tabs[i]));\r\n\twindow.addEventListener('scroll', throttle(() => { for (let i = 0; i < conts.length; i += 1) conts[i].onWindowScroll(); }), { passive: true });\r\n\twindow.addEventListener('resize', throttle(() => { for (let i = 0; i < conts.length; i += 1) conts[i].onWindowResize(); }), { passive: true });\r\n}\r\n\r\nfunction throttle(fn) {\r\n\tlet isRunning;\r\n\treturn () => {\r\n\t\tif (isRunning) return;\r\n\t\tisRunning = true;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tisRunning = false;\r\n\t\t\tfn();\r\n\t\t});\r\n\t};\r\n}\r\n\r\nclass FixedHeaderTable {\r\n\r\n\tconstructor (tab) {\r\n\t\tthis._table        = tab;\r\n\t\tthis._headerHeight = 0;\r\n\t\tthis._windowWidth  = 0;\r\n\t\tthis._create();\r\n\t\tsetTimeout(() => { this._initialize(); }, 10);\r\n\t}\r\n\r\n\t_create() {\r\n\t\tthis._sbar = this._createScrollBarClone();\r\n\t\tconst caps = this._table.getElementsByTagName('caption');\r\n\t\tthis._capt = caps.length ? caps[0] : null;\r\n\t}\r\n\r\n\t_createScrollBarClone() {\r\n\t\tconst e = document.createElement('div');\r\n\t\te.dataset.stile += ' ' + ST_SCROLL_BAR;\r\n\t\tconst spacer = document.createElement('div');\r\n\t\te.appendChild(spacer);\r\n\t\tthis._table.parentNode.appendChild(e);\r\n\t\treturn e;\r\n\t}\r\n\r\n\r\n\t// ---------------------------------------------------------------------\r\n\r\n\r\n\t_initialize() {\r\n\t\tthis._initTableScroll();\r\n\t\tthis.onWindowResize();\r\n\t}\r\n\r\n\t_initTableScroll() {\r\n\t\tlet tableScrollChanged = false;\r\n\t\tlet sbarScrollChanged  = false;\r\n\t\tthis._table.addEventListener('scroll', throttle(() => {\r\n\t\t\tif (tableScrollChanged) {\r\n\t\t\t\ttableScrollChanged = false;\r\n\t\t\t} else {\r\n\t\t\t\tthis._sbar.scrollLeft = this._table.scrollLeft;\r\n\t\t\t\tsbarScrollChanged = true;\r\n\t\t\t}\r\n\t\t}));\r\n\t\tthis._sbar.addEventListener('scroll', throttle(() => {\r\n\t\t\tif (sbarScrollChanged) {\r\n\t\t\t\tsbarScrollChanged = false;\r\n\t\t\t} else {\r\n\t\t\t\tthis._table.scrollLeft = this._sbar.scrollLeft;\r\n\t\t\t\ttableScrollChanged = true;\r\n\t\t\t}\r\n\t\t}));\r\n\t}\r\n\r\n\r\n\t// ---------------------------------------------------------------------\r\n\r\n\r\n\tonWindowResize() {\r\n\t\tconst t = this._table;\r\n\t\tt.style.overflowX = (t.scrollWidth < t.clientWidth + 2) ? 'hidden' : '';\r\n\t\tconst ww = Math.min(window.outerWidth, window.innerWidth);  // for iOS\r\n\t\tif (this._windowWidth === ww) return;\r\n\t\tthis._windowWidth = ww;\r\n\t\tif (this._sbar) {\r\n\t\t\tconst b = this._sbar;\r\n\t\t\tb.style.maxWidth = `${t.clientWidth}px`;\r\n\t\t\tb.style.display = 'none';\r\n\t\t\tconst h = parseInt(_getScrollBarWidth());\r\n\t\t\tif (0 < h) b.style.height = (h + 2) + 'px';\r\n\t\t\tb.firstChild.style.width = `${t.scrollWidth}px`;\r\n\t\t\tthis.onWindowScroll();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t// ---------------------------------------------------------------------\r\n\r\n\r\n\tonWindowScroll() {\r\n\t\tconst t = this._table;\r\n\t\tconst tr     = t.getBoundingClientRect();\r\n\t\tconst tabTop = tr.top, tabBottom = tr.bottom;\r\n\t\tconst offset = getOffset();\r\n\t\tconst capH   = this._capt ? this._capt.offsetHeight : 0;\r\n\t\tconst headH  = this._headerHeight;\r\n\t\tconst inView = tabBottom - tabTop - capH < CAPABLE_WINDOW_HEIGHT_RATIO * (window.innerHeight - offset);\r\n\r\n\t\tlet sbarVisible = false;\r\n\t\tif (inView) {  // do nothing\r\n\t\t} else if (window.innerHeight < tabTop + capH + headH) {  // do nothing\r\n\t\t} else if (tabBottom < window.innerHeight) {  // do nothing\r\n\t\t} else if (t.scrollWidth - t.clientWidth > 2) {\r\n\t\t\tsbarVisible = true;\r\n\t\t}\r\n\t\tif (this._sbar) {\r\n\t\t\tconst b = this._sbar;\r\n\t\t\tb.style.display = sbarVisible ? 'block' : 'none';\r\n\t\t\tb.style.left = tr.left + 'px';\r\n\t\t\tb.scrollLeft = t.scrollLeft;\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n\r\n// Utilities ---------------------------------------------------------------\r\n\r\n\r\nfunction _getScrollBarWidth() {\r\n\tconst d = document.createElement('div');\r\n\td.setAttribute('style', `position:absolute;bottom:100%;width:calc(100vw - 100%);height:1px;`);\r\n\tdocument.body.appendChild(d);\r\n\tlet width = 0 | window.getComputedStyle(d).getPropertyValue('width');\r\n\r\n\tif (width === 0) {  // Window does not have any scroll bar\r\n\t\td.style.overflowY = 'scroll';\r\n\t\td.style.width = '';\r\n\t\tconst c = document.createElement('div');\r\n\t\tc.style.minHeight = '100px';\r\n\t\td.appendChild(c);\r\n\t\tconst cw = 0 | window.getComputedStyle(c).getPropertyValue('width');\r\n\t\twidth = d.offsetWidth - cw;\r\n\t}\r\n\tdocument.body.removeChild(d);\r\n\treturn width;\r\n}\r\n"]}