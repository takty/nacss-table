/**
 * Table
 *
 * @author Takuto Yanagida
 * @version 2024-08-22
 */
/**
 * Table
 *
 * @author Takuto Yanagida
 * @version 2023-01-16
 */
/**
 * Main
 *
 * @author Takuto Yanagida
 * @version 2024-08-22
 */
/*
--nc-table-rule-color: #ddd;
--nc-table-rule-width: 2px;
--nc-table-rule-style: solid;

--nc-table-cell-padding: 0.25rem 0.5rem;
--nc-table-cell-rule   : transparent 0 solid;

--nc-table-cell-rule-color: #ddd;
	--nc-table-cell-rule-color-block
	--nc-table-cell-rule-color-inline
--nc-table-cell-rule-width: 1px;
	--nc-table-cell-rule-width-block
	--nc-table-cell-rule-width-inline
--nc-table-cell-rule-style: solid;
	--nc-table-cell-rule-style-block
	--nc-table-cell-rule-style-inline

--nc-table-cell-color      : unset;
--nc-table-cell-background : unset;
--nc-table-cell-font-weight: unset;
--nc-table-cell-text-align : unset;

--nc-table-header-color      : unset;
--nc-table-header-background : #ddd;
--nc-table-header-font-weight: bold;
--nc-table-header-text-align : center;

--nc-table-caption-font-size : 87.25%;
--nc-table-caption-text-align: center;
--nc-table-caption-max-width : 90%;
--nc-table-caption-margin    : 0.75rem;
*/
/**
 * Neat Width
 *
 * @author Takuto Yanagida
 * @version 2023-02-20
 */
/*
--nc-table-shadow-right: inset -2rem 0 1rem -1rem #0000001a;
--nc-table-shadow-left : inset  2rem 0 1rem -1rem #0000001a;
*/
/**
 * Usable View
 *
 * @author Takuto Yanagida
 * @version 2023-01-17
 */
/*
--nc-table-background   : Canvas;
--nc-table-shadow-sticky: 0 0.5rem 0.5rem -0.5rem #00000080;
--nc-table-shadow-right : inset -2rem 0 1rem -1rem #0000001a;
--nc-table-shadow-left  : inset  2rem 0 1rem -1rem #0000001a;
*/
/**
 * Table
 *
 * @author Takuto Yanagida
 * @version 2023-01-16
 */
table:where(:not([class]), .is-style-stripes, .has-fixed-layout) {
  font-feature-settings: "pkna" 1;
}
table:where(:not([class]), .is-style-stripes, .has-fixed-layout) :is(tbody, tfoot) {
  border-block-end: var(--nc-table-rule-color, #ddd) var(--nc-table-rule-width, 2px) var(--nc-table-rule-style, solid);
}
table:where(:not([class]), .is-style-stripes, .has-fixed-layout) :is(thead, tbody:first-child, caption + tbody, colgroup + tbody) {
  border-block-start: var(--nc-table-rule-color, #ddd) var(--nc-table-rule-width, 2px) var(--nc-table-rule-style, solid);
}
table:where(:not([class]), .is-style-stripes, .has-fixed-layout) :is(thead, tbody:first-child, caption + tbody, colgroup + tbody) > tr:first-child :is(th, td) {
  border-block-start: none;
}
table:where(:not([class]), .is-style-stripes, .has-fixed-layout) :is(th, td) {
  padding: var(--nc-table-cell-padding, 0.25rem 0.5rem);
  border: var(--nc-table-cell-rule, transparent 0 solid);
  border-block-start: var(--nc-table-cell-rule-color-block, var(--nc-table-cell-rule-color, #ddd)) var(--nc-table-cell-rule-width-block, var(--nc-table-cell-rule-width, 1px)) var(--nc-table-cell-rule-style-block, var(--nc-table-cell-rule-style, solid));
}
table:where(:not([class]), .is-style-stripes, .has-fixed-layout) :is(th, td):where(:not(:first-child)) {
  border-inline-start: var(--nc-table-cell-rule-color-inline, var(--nc-table-cell-rule-color, #ddd)) var(--nc-table-cell-rule-width-inline, var(--nc-table-cell-rule-width, 1px)) var(--nc-table-cell-rule-style-inline, var(--nc-table-cell-rule-style, solid));
}
table:where(:not([class]), .is-style-stripes, .has-fixed-layout) :is(th, td):where(:not(:last-child)) {
  border-inline-end: var(--nc-table-cell-rule-color-inline, var(--nc-table-cell-rule-color, #ddd)) var(--nc-table-cell-rule-width-inline, var(--nc-table-cell-rule-width, 1px)) var(--nc-table-cell-rule-style-inline, var(--nc-table-cell-rule-style, solid));
}
table:where(:not([class]), .is-style-stripes, .has-fixed-layout) :is(thead td, th) {
  color: var(--nc-table-header-color, unset);
  background: var(--nc-table-header-background, #ddd);
  font-weight: var(--nc-table-header-font-weight, bold);
  text-align: var(--nc-table-header-text-align, center);
}
table:where(:not([class]), .is-style-stripes, .has-fixed-layout) td {
  color: var(--nc-table-cell-color, unset);
  background: var(--nc-table-cell-background, unset);
  font-weight: var(--nc-table-cell-font-weight, unset);
  text-align: var(--nc-table-cell-text-align, unset);
  vertical-align: top;
}
table:where(:not([class]), .is-style-stripes, .has-fixed-layout) td p:not([class]) {
  text-align: unset;
}
table:where(:not([class]), .is-style-stripes, .has-fixed-layout) caption {
  padding-block-end: var(--nc-table-caption-margin, 0.75rem);
  font-size: var(--nc-table-caption-font-size, 87.25%);
  text-align: var(--nc-table-caption-text-align, center);
}
table:where(:not([class]), .is-style-stripes, .has-fixed-layout) caption > span {
  display: inline-block;
  max-width: var(--nc-table-caption-max-width, 90%);
  text-align: start;
}

table.is-style-stripes tr:nth-child(odd) > td {
  background: var(--nc-table-background-second, #eee);
}

table[data-nc-table-neat] {
  display: block;
  width: -moz-fit-content;
  width: fit-content;
  max-width: 100%;
  overflow: auto;
  overscroll-behavior-x: contain;
  border-collapse: collapse;
}

table[data-nc-table-full] {
  width: 100%;
  border-collapse: collapse;
}

table[data-nc-scroll-right] caption, table[data-nc-scroll-left] caption {
  display: block;
  position: sticky;
  inset-inline: 0;
}
table[data-nc-scroll-right]::after, table[data-nc-scroll-left]::after {
  content: "";
  display: flex;
  position: sticky;
  inset: auto 0 0 0;
  pointer-events: none;
  height: var(--nc-height);
  margin-top: calc(-1 * var(--nc-height));
  box-shadow: var(--nc-table-shadow-right, inset -2rem 0 1rem -1rem rgba(0, 0, 0, 0.1019607843)), var(--nc-table-shadow-left, inset 2rem 0 1rem -1rem rgba(0, 0, 0, 0.1019607843));
}

table[data-nc-scroll-right]:not([data-nc-scroll-left]) {
  --nc-table-shadow-left: 0 0;
}

table[data-nc-scroll-left]:not([data-nc-scroll-right]) {
  --nc-table-shadow-right: 0 0;
}

div[data-nc-table-sticky-header-container] {
  display: none;
  position: fixed;
  top: 0;
  margin: 0 !important;
  overflow: hidden;
  background: var(--nc-table-background, Canvas);
  box-shadow: var(--nc-table-shadow-sticky, 0 0.5rem 0.5rem -0.5rem rgba(0, 0, 0, 0.5019607843));
}
div[data-nc-table-sticky-header-container]::after {
  content: "";
  display: flex;
  position: sticky;
  inset: 0;
  pointer-events: none;
  height: var(--nc-height);
  margin-top: calc(-1 * var(--nc-height));
  box-shadow: var(--nc-table-shadow-right, inset -2rem 0 1rem -1rem rgba(0, 0, 0, 0.1019607843)), var(--nc-table-shadow-left, inset 2rem 0 1rem -1rem rgba(0, 0, 0, 0.1019607843));
}
div[data-nc-table-sticky-header-container]:not([data-nc-scroll-left])::after {
  --nc-table-shadow-left: 0 0;
}
div[data-nc-table-sticky-header-container]:not([data-nc-scroll-right])::after {
  --nc-table-shadow-right: 0 0;
}

div[data-nc-table-sticky-header-table] {
  display: table;
  margin: 0;
  width: var(--nc-width);
  overflow-x: hidden;
  pointer-events: none;
  border-collapse: collapse;
  font-feature-settings: "pkna" 1;
}
div[data-nc-table-sticky-header-table] :is(thead) {
  border-block-start: var(--nc-table-rule-color, #ddd) var(--nc-table-rule-width, 2px) var(--nc-table-rule-style, solid);
}
div[data-nc-table-sticky-header-table] :is(thead) > tr:first-child :is(th, td) {
  border-block-start: none;
}
div[data-nc-table-sticky-header-table] :is(th, td) {
  padding: var(--nc-table-cell-padding, 0.25rem 0.5rem);
  border: var(--nc-table-cell-rule, transparent 0 solid);
  border-block-start: var(--nc-table-cell-rule-color-block, var(--nc-table-cell-rule-color, #ddd)) var(--nc-table-cell-rule-width-block, var(--nc-table-cell-rule-width, 1px)) var(--nc-table-cell-rule-style-block, var(--nc-table-cell-rule-style, solid));
}
div[data-nc-table-sticky-header-table] :is(th, td):where(:not(:first-child)) {
  border-inline-start: var(--nc-table-cell-rule-color-inline, var(--nc-table-cell-rule-color, #ddd)) var(--nc-table-cell-rule-width-inline, var(--nc-table-cell-rule-width, 1px)) var(--nc-table-cell-rule-style-inline, var(--nc-table-cell-rule-style, solid));
}
div[data-nc-table-sticky-header-table] :is(th, td):where(:not(:last-child)) {
  border-inline-end: var(--nc-table-cell-rule-color-inline, var(--nc-table-cell-rule-color, #ddd)) var(--nc-table-cell-rule-width-inline, var(--nc-table-cell-rule-width, 1px)) var(--nc-table-cell-rule-style-inline, var(--nc-table-cell-rule-style, solid));
}
div[data-nc-table-sticky-header-table] :is(thead td, th) {
  color: var(--nc-table-header-color, unset);
  background: var(--nc-table-header-background, #ddd);
  font-weight: var(--nc-table-header-font-weight, bold);
  text-align: var(--nc-table-header-text-align, center);
}

div[data-nc-table-sticky-scroll-bar] {
  position: fixed;
  inset-block-end: 0;
  z-index: 99;
  margin: 0;
  overflow-x: auto;
  height: calc(1rem + 2px);
  border: 1px solid transparent;
  display: none;
}
div[data-nc-table-sticky-scroll-bar] > div {
  height: 1px;
}

@media print {
  table[data-nc-table-neat] {
    display: table;
  }
  table[data-nc-table-neat] td, table[data-nc-table-neat] th {
    min-width: initial !important;
    white-space: normal !important;
  }
  table[data-nc-scroll-right], table[data-nc-scroll-left] {
    box-shadow: none !important;
  }
  table[data-nc-scroll-right] caption, table[data-nc-scroll-left] caption {
    display: table-caption;
  }
  div[data-nc-table-sticky-header-container] {
    display: none !important;
  }
  div[data-nc-table-sticky-scroll-bar] {
    display: none !important;
  }
}/*# sourceMappingURL=table.min.css.map */
